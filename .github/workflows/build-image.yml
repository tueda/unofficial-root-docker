name: Build and Push Docker Image

on:
  push:

permissions:
  packages: write

env:
  REGISTRY_IMAGE: ${{ github.repository_owner }}/root
  ROOT_DOCKER_REVISION: 2619d92
  ROOT_VERSION: 6.32.02
  CMAKE_CXX_STANDARD: 17

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Download Dockerfile
      run: |
        wget https://raw.githubusercontent.com/root-project/root-docker/${{ env.ROOT_DOCKER_REVISION }}/ubuntu_from_source/Dockerfile
        wget https://raw.githubusercontent.com/root-project/root-docker/${{ env.ROOT_DOCKER_REVISION }}/ubuntu_from_source/packages
        sed 's/ARG ROOT_VERSION=.*/ARG ROOT_VERSION=${{ env.ROOT_VERSION }}/;s/ARG CMAKE_CXX_STANDARD=.*/ARG CMAKE_CXX_STANDARD=${{ env.CMAKE_CXX_STANDARD }}/' Dockerfile >Dockerfile.tmp
        mv Dockerfile.tmp Dockerfile
        head -10000 Dockerfile packages

    - name: Docker metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY_IMAGE }}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push by digest
      id: build
      uses: docker/build-push-action@v6
      with:
        context: .
        platforms: ${{ matrix.platform }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=${{ !contains(steps.meta.outputs.labels, 'main') }},name-canonical=true,push=${{ !contains(steps.meta.outputs.labels, 'main') }}

    - name: Export digest
      run: |
        mkdir -p /tmp/digests
        digest="${{ steps.build.outputs.digest }}"
        touch "/tmp/digests/${digest#sha256:}"
        platform=${{ matrix.platform }}
        echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

    - name: Upload digest
      uses: actions/upload-artifact@v4
      with:
        name: digests-${{ env.PLATFORM_PAIR }}
        path: /tmp/digests/*
        if-no-files-found: error
        retention-days: 1

  merge:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create ${{ contains(steps.meta.outputs.labels, 'main') && '--dry-run' || '' }} - $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }}
